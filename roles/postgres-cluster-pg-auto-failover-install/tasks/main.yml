---

- name: Check if PostgreSQL database is initialized.
  ansible.builtin.stat:
    path: "{{ postgresql_cluster_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- name: Download deb.sh from Citus
  ansible.builtin.get_url:
    url: https://install.citusdata.com/community/deb.sh
    dest: /tmp/deb.sh

- name: "run /tmp/deb.sh"
  ansible.builtin.command:
    cmd: bash /tmp/deb.sh
  when: not pgdata_dir_version.stat.exists

- name: "install pg-auto-failover-cli"
  ansible.builtin.apt:
    name: "pg-auto-failover-cli"
    state: present
    update_cache: "{{ apt_update_cache | default('True') }}"
  when: not pgdata_dir_version.stat.exists

- name: "install postgresql-{{ postgresql_cluster_version }}-auto-failover"
  ansible.builtin.apt:
    name: "postgresql-{{ postgresql_cluster_version }}-auto-failover"
    state: present
    update_cache: "{{ apt_update_cache | default('True') }}"
  when: not pgdata_dir_version.stat.exists

- name: "Make sure default postgres service is stopped and disabled"
  ansible.builtin.systemd_service:
    state: stopped
    enabled: false
    name: postgresql
