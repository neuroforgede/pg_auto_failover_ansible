---
- name: "check if server is standby (pg_is_in_recovery)"
  ansible.builtin.shell: 
    psql -p "{{ postgresql_cluster_port }}" -t -X -A -c 'select pg_is_in_recovery()'
  become_user: "{{ postgresql_cluster_user }}"
  register: pg_is_in_recovery

- name: Ensure PostgreSQL databases are present.
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
    encoding: "{{ item.encoding | default('UTF-8') }}"
    template: "{{ item.template | default('template0') }}"
    login_host: "{{ item.login_host | default('localhost') }}"
    login_password: "{{ item.login_password | default(omit) }}"
    login_user: "{{ item.login_user | default(postgresql_cluster_user) }}"
    login_unix_socket: "{{ item.login_unix_socket | default(postgresql_cluster_unix_socket_directories[0]) }}"
    port: "{{ item.port | default(postgresql_cluster_port) }}"
    owner: "{{ item.owner | default(postgresql_cluster_user) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ postgresql_cluster_databases | default([]) | flatten(levels=1) }}"
  become: true
  become_user: "{{ postgresql_cluster_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true
  when: not (postgresql_cluster_is_monitor | default('False') | bool) and pg_is_in_recovery.stdout_lines[0] == 'f'


- ansible.builtin.include_tasks:
    file: add_schemas.yml
  vars:
    database: "{{ item }}"
  loop: "{{ postgresql_cluster_databases | default([]) | flatten(levels=1) }}"
