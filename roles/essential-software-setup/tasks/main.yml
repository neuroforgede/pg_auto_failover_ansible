# pg_auto_failover_ansible
# 
# Copyright (C) 2020-2022  NeuroForge GmbH & Co.KG <https://neuroforge.de/>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
---
# careful: this is executed on the management node as well, so this should
# really only include _essential_ software
- name: Install essential packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    update_cache: "{{ apt_update_cache | default('True') }}"
  vars:
    packages:
    - vim
    - ufw
    - sudo
    - python-setuptools
    - acl

- name: Install essential packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    update_cache: "{{ apt_update_cache | default('True') }}"
  vars:
    packages:
    - python-pip
  when: ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')

- name: Install essential packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    update_cache: "{{ apt_update_cache | default('True') }}"
  vars:
    packages:
    - python3-pip
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')

- name: Install passlib with pip
  ansible.builtin.pip:
    name: passlib

- name: configure and enable ufw
  remote_user: root
  become: true
  block:
    - name: Allow ssh connections via ipv4
      community.general.ufw:
        rule: allow
        proto: tcp
        to: 0.0.0.0/0
        port: "22"

    - name: Allow ssh ipv6 connections via loopback
      community.general.ufw:
        rule: allow
        proto: tcp
        from: ::1
        to: ::1
        port: "22"

    - name: Allow ssh ipv6 connections to ipv6 floating ip if configured
      community.general.ufw:
        rule: allow
        proto: tcp
        to: "{{ floating_ipv6 }}"
        port: "22"
      when: floating_ipv6 is defined

    - name: Enable ufw
      community.general.ufw:
        state: enabled

- name: molly guard
  ansible.builtin.include_tasks:
    file: subtasks/molly-guard.yml

- name: determine if we are disabling ipv6
  ansible.builtin.set_fact:
    setup_disable_ipv6_val: "{{ setup_disable_ipv6 | default('False') }}"

- name: Disable ipv6
  ansible.builtin.raw: echo 'Acquire::ForceIPv4 "true";' | sudo tee /etc/apt/apt.conf.d/99force-ipv4
  when: setup_disable_ipv6_val|bool
