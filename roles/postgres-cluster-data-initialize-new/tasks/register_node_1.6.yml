---
- name: "compute monitor_nodes_list"
  vars:
    monitor_node_ip : "{{ hostvars[item]['host_ip'] | default(hostvars[item]['ansible_host']) }}"
  ansible.builtin.set_fact:
    postgresql_cluster_monitor_node_ips: "{{ (postgresql_cluster_monitor_node_ips | default([])) + [monitor_node_ip] }}"
  loop: "{{ groups['postgres_cluster'] | default([]) | flatten(levels=1) }}"


# TODO: add support for crl files
# FIXME: monitor port may be wrong if its overridden on a per host basis !!!
#--group {{ postgresql_cluster_group | default('0') }} \

- name: "run pg_autoctl create postgres"
  become_user: "{{ postgresql_cluster_user }}"
  # by default allow up to 5 hours for this command until it times out
  async: "{{ postgresql_cluster_new_node_creation_timeout | default(18000) | int }}"
  # poll every 10 seconds to see if we are finished
  poll: 10
  vars:
    first_monitor_node: "{{ postgresql_cluster_monitor_node_ips | first }}"
  ansible.builtin.shell: >
    PATH="$PATH:{{ postgresql_cluster_bin_path }}" pg_autoctl create postgres \
    --pgdata "{{ postgresql_cluster_data_dir }}" \
    --skip-pg-hba \
    --formation {{ postgresql_cluster_formation | default('default') }} \
    --ssl-ca-file "{{ postgresql_cluster_ssl_ca_file | default('/data/ansible/certs/postgres_server/rootCA.crt') }}" \
    --server-key "{{ postgresql_cluster_server_key | default('/data/ansible/certs/postgres_server/server.key') }}" \
    --server-cert "{{ postgresql_cluster_server_cert | default('/data/ansible/certs/postgres_server/server.crt') }}" \
    --name "{{ host_ip }}" \
    --hostname "{{ host_ip }}" \
    --pgport "{{ postgresql_cluster_port | default('5433') }}" \
    --monitor postgres://autoctl_node@{{ first_monitor_node }}:{{ postgresql_cluster_port | default('5433') }}/pg_auto_failover
  when: not (postgresql_cluster_is_monitor | default('False') | bool)
